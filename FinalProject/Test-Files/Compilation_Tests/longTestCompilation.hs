import Sprockell
prog :: [Instruction]
prog = [
				Load (ImmValue 5) regA ,
				Store regA (DirAddr 0) ,
				Load (ImmValue 10) regA ,
				Store regA (DirAddr 1) ,
				Load (ImmValue 1) regA ,
				Store regA (DirAddr 2) ,
				Load (ImmValue 0) regA ,
				Store regA (DirAddr 3) ,
				Load (DirAddr 3) regA ,
				Load (ImmValue 5) regB ,
				Compute Lt regA regB regA ,
				Store regA (DirAddr 5) ,
				Load (ImmValue 1) regB ,
				Compute Xor regA regB regA ,
				Branch regA (Abs 28) ,
				Load (DirAddr 0) regA ,
				Load (ImmValue 5) regB ,
				Compute Add regA regB regA ,
				Store regA (DirAddr 0) ,
				Load (DirAddr 1) regA ,
				Load (DirAddr 0) regB ,
				Compute Add regA regB regA ,
				Store regA (DirAddr 1) ,
				Load (DirAddr 3) regA ,
				Load (ImmValue 1) regB ,
				Compute Add regA regB regA ,
				Store regA (DirAddr 3) ,
				Jump (Rel (-19)) ,
				Load (ImmValue 5) regA ,
				Store regA (DirAddr 4) ,
				Load (DirAddr 4) regA ,
				Load (ImmValue 0) regB ,
				Compute Gt regA regB regA ,
				Compute Lt regA regB regA ,
				Store regA (DirAddr 6) ,
				Load (ImmValue 1) regB ,
				Compute Xor regA regB regA ,
				Branch regA (Abs 48) ,
				Load (DirAddr 0) regA ,
				Load (ImmValue 1) regB ,
				Compute Sub regA regB regA ,
				Store regA (DirAddr 0) ,
				Load (DirAddr 1) regA ,
				Load (ImmValue 1) regB ,
				Compute Add regA regB regA ,
				Store regA (DirAddr 1) ,
				Load (DirAddr 4) regA ,
				Load (ImmValue 1) regB ,
				Compute Sub regA regB regA ,
				Store regA (DirAddr 4) ,
				Jump (Rel (-20)) ,
				Load (DirAddr 0) regA ,
				Load (ImmValue 0) regB ,
				Compute Gt regA regB regA ,
				Store regA (DirAddr 6) ,
				Load (ImmValue 1) regB ,
				Compute Xor regA regB regA ,
				Branch regA (Abs 56) ,
				Load (ImmValue 0) regA ,
				Store regA (DirAddr 2) ,
				Load (DirAddr 1) regA ,
				WriteInstr regA numberIO ,
				Load (DirAddr 2) regA ,
				EndProg]

main = run [prog] 
